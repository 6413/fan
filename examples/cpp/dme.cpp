#include <fan/types/dme.h>

#define DME_VERIFY_PRINT 1

#if DME_VERIFY_PRINT == 1
  #include <stdio.h>
  #include <typeinfo>
#endif

#define VERIFY_DME 1

#if VERIFY_DME == 1
  #include <cassert>
#endif


#pragma pack(push, 1)

struct data_we_want_t {
  int number;
};

struct dme_t : __dme_inherit(dme_t, data_we_want_t) {
  __dme(a,) = {{.number = 5}};
  __dme(b,) = {{.number = 5}};
  __dme(c,) = {{.number = 5}};
  __dme(d,) = {{.number = 5}};
  __dme(e,) = {{.number = 5}};
  __dme(f,) = {{.number = 5}};
  __dme(g,) = {{.number = 5}};
  __dme(h,) = {{.number = 5}};
  __dme(i,) = {{.number = 5}};
  __dme(j,) = {{.number = 5}};
  __dme(k,) = {{.number = 5}};
  __dme(l,) = {{.number = 5}};
  __dme(m,) = {{.number = 5}};
  __dme(n,) = {{.number = 5}};
  __dme(o,) = {{.number = 5}};
  __dme(p,) = {{.number = 5}};
  __dme(q,) = {{.number = 5}};
  __dme(r,) = {{.number = 5}};
  __dme(s,) = {{.number = 5}};
  __dme(t,) = {{.number = 5}};
  __dme(u,) = {{.number = 5}};
  __dme(v,) = {{.number = 5}};
  __dme(w,) = {{.number = 5}};
  __dme(x,) = {{.number = 5}};
  __dme(y,) = {{.number = 5}};
  __dme(z,) = {{.number = 5}};
  __dme(a1,) = {{.number = 5}};
  __dme(b1,) = {{.number = 5}};
  __dme(c1,) = {{.number = 5}};
  __dme(d1,) = {{.number = 5}};
  __dme(e1,) = {{.number = 5}};
  __dme(f1,) = {{.number = 5}};
  __dme(g1,) = {{.number = 5}};
  __dme(h1,) = {{.number = 5}};
  __dme(i1,) = {{.number = 5}};
  __dme(j1,) = {{.number = 5}};
  __dme(k1,) = {{.number = 5}};
  __dme(l1,) = {{.number = 5}};
  __dme(m1,) = {{.number = 5}};
  __dme(n1,) = {{.number = 5}};
  __dme(o1,) = {{.number = 5}};
  __dme(p1,) = {{.number = 5}};
  __dme(q1,) = {{.number = 5}};
  __dme(r1,) = {{.number = 5}};
  __dme(s1,) = {{.number = 5}};
  __dme(t1,) = {{.number = 5}};
  __dme(u1,) = {{.number = 5}};
  __dme(v1,) = {{.number = 5}};
  __dme(w1,) = {{.number = 5}};
  __dme(x1,) = {{.number = 5}};
  __dme(y1,) = {{.number = 5}};
  __dme(z1,) = {{.number = 5}};
  __dme(a2,) = {{.number = 5}};
  __dme(b2,) = {{.number = 5}};
  __dme(c2,) = {{.number = 5}};
  __dme(d2,) = {{.number = 5}};
  __dme(e2,) = {{.number = 5}};
  __dme(f2,) = {{.number = 5}};
  __dme(g2,) = {{.number = 5}};
  __dme(h2,) = {{.number = 5}};
  __dme(i2,) = {{.number = 5}};
  __dme(j2,) = {{.number = 5}};
  __dme(k2,) = {{.number = 5}};
  __dme(l2,) = {{.number = 5}};
  __dme(m2,) = {{.number = 5}};
  __dme(n2,) = {{.number = 5}};
  __dme(o2,) = {{.number = 5}};
  __dme(p2,) = {{.number = 5}};
  __dme(q2,) = {{.number = 5}};
  __dme(r2,) = {{.number = 5}};
  __dme(s2,) = {{.number = 5}};
  __dme(t2,) = {{.number = 5}};
  __dme(u2,) = {{.number = 5}};
  __dme(v2,) = {{.number = 5}};
  __dme(w2,) = {{.number = 5}};
  __dme(x2,) = {{.number = 5}};
  __dme(y2,) = {{.number = 5}};
  __dme(z2,) = {{.number = 5}};
  __dme(a3,) = {{.number = 5}};
  __dme(b3,) = {{.number = 5}};
  __dme(c3,) = {{.number = 5}};
  __dme(d3,) = {{.number = 5}};
  __dme(e3,) = {{.number = 5}};
  __dme(f3,) = {{.number = 5}};
  __dme(g3,) = {{.number = 5}};
  __dme(h3,) = {{.number = 5}};
  __dme(i3,) = {{.number = 5}};
  __dme(j3,) = {{.number = 5}};
  __dme(k3,) = {{.number = 5}};
  __dme(l3,) = {{.number = 5}};
  __dme(m3,) = {{.number = 5}};
  __dme(n3,) = {{.number = 5}};
  __dme(o3,) = {{.number = 5}};
  __dme(p3,) = {{.number = 5}};
  __dme(q3,) = {{.number = 5}};
  __dme(r3,) = {{.number = 5}};
  __dme(s3,) = {{.number = 5}};
  __dme(t3,) = {{.number = 5}};
  __dme(u3,) = {{.number = 5}};
  __dme(v3,) = {{.number = 5}};
  __dme(w3,) = {{.number = 5}};
  __dme(x3,) = {{.number = 5}};
  __dme(y3,) = {{.number = 5}};
  __dme(z3,) = {{.number = 5}};
  __dme(a4,) = {{.number = 5}};
  __dme(b4,) = {{.number = 5}};
  __dme(c4,) = {{.number = 5}};
  __dme(d4,) = {{.number = 5}};
  __dme(e4,) = {{.number = 5}};
  __dme(f4,) = {{.number = 5}};
  __dme(g4,) = {{.number = 5}};
  __dme(h4,) = {{.number = 5}};
  __dme(i4,) = {{.number = 5}};
  __dme(j4,) = {{.number = 5}};
  __dme(k4,) = {{.number = 5}};
  __dme(l4,) = {{.number = 5}};
  __dme(m4,) = {{.number = 5}};
  __dme(n4,) = {{.number = 5}};
  __dme(o4,) = {{.number = 5}};
  __dme(p4,) = {{.number = 5}};
  __dme(q4,) = {{.number = 5}};
  __dme(r4,) = {{.number = 5}};
  __dme(s4,) = {{.number = 5}};
  __dme(t4,) = {{.number = 5}};
  __dme(u4,) = {{.number = 5}};
  __dme(v4,) = {{.number = 5}};
  __dme(w4,) = {{.number = 5}};
  __dme(x4,) = {{.number = 5}};
  __dme(y4,) = {{.number = 5}};
  __dme(z4,) = {{.number = 5}};
  __dme(a5,) = {{.number = 5}};
  __dme(b5,) = {{.number = 5}};
  __dme(c5,) = {{.number = 5}};
  __dme(d5,) = {{.number = 5}};
  __dme(e5,) = {{.number = 5}};
  __dme(f5,) = {{.number = 5}};
  __dme(g5,) = {{.number = 5}};
  __dme(h5,) = {{.number = 5}};
  __dme(i5,) = {{.number = 5}};
  __dme(j5,) = {{.number = 5}};
  __dme(k5,) = {{.number = 5}};
  __dme(l5,) = {{.number = 5}};
  __dme(m5,) = {{.number = 5}};
  __dme(n5,) = {{.number = 5}};
  __dme(o5,) = {{.number = 5}};
  __dme(p5,) = {{.number = 5}};
  __dme(q5,) = {{.number = 5}};
  __dme(r5,) = {{.number = 5}};
  __dme(s5,) = {{.number = 5}};
  __dme(t5,) = {{.number = 5}};
  __dme(u5,) = {{.number = 5}};
  __dme(v5,) = {{.number = 5}};
  __dme(w5,) = {{.number = 5}};
  __dme(x5,) = {{.number = 5}};
  __dme(y5,) = {{.number = 5}};
  __dme(z5,) = {{.number = 5}};
  __dme(a6,) = {{.number = 5}};
  __dme(b6,) = {{.number = 5}};
  __dme(c6,) = {{.number = 5}};
  __dme(d6,) = {{.number = 5}};
  __dme(e6,) = {{.number = 5}};
  __dme(f6,) = {{.number = 5}};
  __dme(g6,) = {{.number = 5}};
  __dme(h6,) = {{.number = 5}};
  __dme(i6,) = {{.number = 5}};
  __dme(j6,) = {{.number = 5}};
  __dme(k6,) = {{.number = 5}};
  __dme(l6,) = {{.number = 5}};
  __dme(m6,) = {{.number = 5}};
  __dme(n6,) = {{.number = 5}};
  __dme(o6,) = {{.number = 5}};
  __dme(p6,) = {{.number = 5}};
  __dme(q6,) = {{.number = 5}};
  __dme(r6,) = {{.number = 5}};
  __dme(s6,) = {{.number = 5}};
  __dme(t6,) = {{.number = 5}};
  __dme(u6,) = {{.number = 5}};
  __dme(v6,) = {{.number = 5}};
  __dme(w6,) = {{.number = 5}};
  __dme(x6,) = {{.number = 5}};
  __dme(y6,) = {{.number = 5}};
  __dme(z6,) = {{.number = 5}};
  __dme(a7,) = {{.number = 5}};
  __dme(b7,) = {{.number = 5}};
  __dme(c7,) = {{.number = 5}};
  __dme(d7,) = {{.number = 5}};
  __dme(e7,) = {{.number = 5}};
  __dme(f7,) = {{.number = 5}};
  __dme(g7,) = {{.number = 5}};
  __dme(h7,) = {{.number = 5}};
  __dme(i7,) = {{.number = 5}};
  __dme(j7,) = {{.number = 5}};
  __dme(k7,) = {{.number = 5}};
  __dme(l7,) = {{.number = 5}};
  __dme(m7,) = {{.number = 5}};
  __dme(n7,) = {{.number = 5}};
  __dme(o7,) = {{.number = 5}};
  __dme(p7,) = {{.number = 5}};
  __dme(q7,) = {{.number = 5}};
  __dme(r7,) = {{.number = 5}};
  __dme(s7,) = {{.number = 5}};
  __dme(t7,) = {{.number = 5}};
  __dme(u7,) = {{.number = 5}};
  __dme(v7,) = {{.number = 5}};
  __dme(w7,) = {{.number = 5}};
  __dme(x7,) = {{.number = 5}};
  __dme(y7,) = {{.number = 5}};
  __dme(z7,) = {{.number = 5}};
  __dme(a8,) = {{.number = 5}};
  __dme(b8,) = {{.number = 5}};
  __dme(c8,) = {{.number = 5}};
  __dme(d8,) = {{.number = 5}};
  __dme(e8,) = {{.number = 5}};
  __dme(f8,) = {{.number = 5}};
  __dme(g8,) = {{.number = 5}};
  __dme(h8,) = {{.number = 5}};
  __dme(i8,) = {{.number = 5}};
  __dme(j8,) = {{.number = 5}};
  __dme(k8,) = {{.number = 5}};
  __dme(l8,) = {{.number = 5}};
  __dme(m8,) = {{.number = 5}};
  __dme(n8,) = {{.number = 5}};
  __dme(o8,) = {{.number = 5}};
  __dme(p8,) = {{.number = 5}};
  __dme(q8,) = {{.number = 5}};
  __dme(r8,) = {{.number = 5}};
  __dme(s8,) = {{.number = 5}};
  __dme(t8,) = {{.number = 5}};
  __dme(u8,) = {{.number = 5}};
  __dme(v8,) = {{.number = 5}};
  __dme(w8,) = {{.number = 5}};
  __dme(x8,) = {{.number = 5}};
  __dme(y8,) = {{.number = 5}};
  __dme(z8,) = {{.number = 5}};
  __dme(a9,) = {{.number = 5}};
  __dme(b9,) = {{.number = 5}};
  __dme(c9,) = {{.number = 5}};
  __dme(d9,) = {{.number = 5}};
  __dme(e9,) = {{.number = 5}};
  __dme(f9,) = {{.number = 5}};
  __dme(g9,) = {{.number = 5}};
  __dme(h9,) = {{.number = 5}};
  __dme(i9,) = {{.number = 5}};
  __dme(j9,) = {{.number = 5}};
  __dme(k9,) = {{.number = 5}};
  __dme(l9,) = {{.number = 5}};
  __dme(m9,) = {{.number = 5}};
  __dme(n9,) = {{.number = 5}};
  __dme(o9,) = {{.number = 5}};
  __dme(p9,) = {{.number = 5}};
  __dme(q9,) = {{.number = 5}};
  __dme(r9,) = {{.number = 5}};
  __dme(s9,) = {{.number = 5}};
  __dme(t9,) = {{.number = 5}};
  __dme(u9,) = {{.number = 5}};
  __dme(v9,) = {{.number = 5}};
  __dme(w9,) = {{.number = 5}};
  __dme(x9,) = {{.number = 5}};
  __dme(y9,) = {{.number = 5}};
  __dme(z9,) = {{.number = 5}};
  __dme(a10,) = {{.number = 5}};
};

struct dme2_t : __dme_inherit(dme2_t, data_we_want_t) {
  __dme(a, int x;) = {{ .number = 105 }};
  __dme(b, int x;) = {{ .number = 105 }};
  __dme(c, int x;) = {{ .number = 105 }};
  __dme(d, int x;) = {{ .number = 105 }};
  __dme(e, int x;) = {{ .number = 105 }};
  __dme(f, int x;) = {{ .number = 105 }};
  __dme(g, int x;) = {{ .number = 105 }};
  __dme(h, int x;) = {{ .number = 105 }};
  __dme(i, int x;) = {{ .number = 105 }};
  __dme(j, int x;) = {{ .number = 105 }};
  __dme(k, int x;) = {{ .number = 105 }};
  __dme(l, int x;) = {{ .number = 105 }};
  __dme(m, int x;) = {{ .number = 105 }};
  __dme(n, int x;) = {{ .number = 105 }};
  __dme(o, int x;) = {{ .number = 105 }};
  __dme(p, int x;) = {{ .number = 105 }};
  __dme(q, int x;) = {{ .number = 105 }};
  __dme(r, int x;) = {{ .number = 105 }};
  __dme(s, int x;) = {{ .number = 105 }};
  __dme(t, int x;) = {{ .number = 105 }};
  __dme(u, int x;) = {{ .number = 105 }};
  __dme(v, int x;) = {{ .number = 105 }};
  __dme(w, int x;) = {{ .number = 105 }};
  __dme(x, int x;) = {{ .number = 105 }};
  __dme(y, int x;) = {{ .number = 105 }};
  __dme(z, int x;) = {{ .number = 105 }};
  __dme(a1, int x;) = {{ .number = 10 }};
  __dme(b1, int x;) = {{ .number = 10 }};
  __dme(c1, int x;) = {{ .number = 10 }};
  __dme(d1, int x;) = {{ .number = 10 }};
  __dme(e1, int x;) = {{ .number = 10 }};
  __dme(f1, int x;) = {{ .number = 10 }};
  __dme(g1, int x;) = {{ .number = 10 }};
  __dme(h1, int x;) = {{ .number = 10 }};
  __dme(i1, int x;) = {{ .number = 10 }};
  __dme(j1, int x;) = {{ .number = 10 }};
  __dme(k1, int x;) = {{ .number = 10 }};
  __dme(l1, int x;) = {{ .number = 10 }};
  __dme(m1, int x;) = {{ .number = 10 }};
  __dme(n1, int x;) = {{ .number = 10 }};
  __dme(o1, int x;) = {{ .number = 10 }};
  __dme(p1, int x;) = {{ .number = 10 }};
  __dme(q1, int x;) = {{ .number = 10 }};
  __dme(r1, int x;) = {{ .number = 10 }};
  __dme(s1, int x;) = {{ .number = 10 }};
  __dme(t1, int x;) = {{ .number = 10 }};
  __dme(u1, int x;) = {{ .number = 10 }};
  __dme(v1, int x;) = {{ .number = 10 }};
  __dme(w1, int x;) = {{ .number = 10 }};
  __dme(x1, int x;) = {{ .number = 10 }};
  __dme(y1, int x;) = {{ .number = 10 }};
  __dme(z1, int x;) = {{ .number = 10 }};
  __dme(a2, int x;) = {{ .number = 10 }};
  __dme(b2, int x;) = {{ .number = 10 }};
  __dme(c2, int x;) = {{ .number = 10 }};
  __dme(d2, int x;) = {{ .number = 10 }};
  __dme(e2, int x;) = {{ .number = 10 }};
  __dme(f2, int x;) = {{ .number = 10 }};
  __dme(g2, int x;) = {{ .number = 10 }};
  __dme(h2, int x;) = {{ .number = 10 }};
  __dme(i2, int x;) = {{ .number = 10 }};
  __dme(j2, int x;) = {{ .number = 10 }};
  __dme(k2, int x;) = {{ .number = 10 }};
  __dme(l2, int x;) = {{ .number = 10 }};
  __dme(m2, int x;) = {{ .number = 10 }};
  __dme(n2, int x;) = {{ .number = 10 }};
  __dme(o2, int x;) = {{ .number = 10 }};
  __dme(p2, int x;) = {{ .number = 10 }};
  __dme(q2, int x;) = {{ .number = 10 }};
  __dme(r2, int x;) = {{ .number = 10 }};
  __dme(s2, int x;) = {{ .number = 10 }};
  __dme(t2, int x;) = {{ .number = 10 }};
  __dme(u2, int x;) = {{ .number = 10 }};
  __dme(v2, int x;) = {{ .number = 10 }};
  __dme(w2, int x;) = {{ .number = 10 }};
  __dme(x2, int x;) = {{ .number = 10 }};
  __dme(y2, int x;) = {{ .number = 10 }};
  __dme(z2, int x;) = {{ .number = 10 }};
  __dme(a3, int x;) = {{ .number = 10 }};
  __dme(b3, int x;) = {{ .number = 10 }};
  __dme(c3, int x;) = {{ .number = 10 }};
  __dme(d3, int x;) = {{ .number = 10 }};
  __dme(e3, int x;) = {{ .number = 10 }};
  __dme(f3, int x;) = {{ .number = 10 }};
  __dme(g3, int x;) = {{ .number = 10 }};
  __dme(h3, int x;) = {{ .number = 10 }};
  __dme(i3, int x;) = {{ .number = 10 }};
  __dme(j3, int x;) = {{ .number = 10 }};
  __dme(k3, int x;) = {{ .number = 10 }};
  __dme(l3, int x;) = {{ .number = 10 }};
  __dme(m3, int x;) = {{ .number = 10 }};
  __dme(n3, int x;) = {{ .number = 10 }};
  __dme(o3, int x;) = {{ .number = 10 }};
  __dme(p3, int x;) = {{ .number = 10 }};
  __dme(q3, int x;) = {{ .number = 10 }};
  __dme(r3, int x;) = {{ .number = 10 }};
  __dme(s3, int x;) = {{ .number = 10 }};
  __dme(t3, int x;) = {{ .number = 10 }};
  __dme(u3, int x;) = {{ .number = 10 }};
  __dme(v3, int x;) = {{ .number = 10 }};
  __dme(w3, int x;) = {{ .number = 10 }};
  __dme(x3, int x;) = {{ .number = 10 }};
  __dme(y3, int x;) = {{ .number = 10 }};
  __dme(z3, int x;) = {{ .number = 10 }};
  __dme(a4, int x;) = {{ .number = 10 }};
  __dme(b4, int x;) = {{ .number = 10 }};
  __dme(c4, int x;) = {{ .number = 10 }};
  __dme(d4, int x;) = {{ .number = 10 }};
  __dme(e4, int x;) = {{ .number = 10 }};
  __dme(f4, int x;) = {{ .number = 10 }};
  __dme(g4, int x;) = {{ .number = 10 }};
  __dme(h4, int x;) = {{ .number = 10 }};
  __dme(i4, int x;) = {{ .number = 10 }};
  __dme(j4, int x;) = {{ .number = 10 }};
  __dme(k4, int x;) = {{ .number = 10 }};
  __dme(l4, int x;) = {{ .number = 10 }};
  __dme(m4, int x;) = {{ .number = 10 }};
  __dme(n4, int x;) = {{ .number = 10 }};
  __dme(o4, int x;) = {{ .number = 10 }};
  __dme(p4, int x;) = {{ .number = 10 }};
  __dme(q4, int x;) = {{ .number = 10 }};
  __dme(r4, int x;) = {{ .number = 10 }};
  __dme(s4, int x;) = {{ .number = 10 }};
  __dme(t4, int x;) = {{ .number = 10 }};
  __dme(u4, int x;) = {{ .number = 10 }};
  __dme(v4, int x;) = {{ .number = 10 }};
  __dme(w4, int x;) = {{ .number = 10 }};
  __dme(x4, int x;) = {{ .number = 10 }};
  __dme(y4, int x;) = {{ .number = 10 }};
  __dme(z4, int x;) = {{ .number = 10 }};
  __dme(a5, int x;) = {{ .number = 10 }};
  __dme(b5, int x;) = {{ .number = 10 }};
  __dme(c5, int x;) = {{ .number = 10 }};
  __dme(d5, int x;) = {{ .number = 10 }};
  __dme(e5, int x;) = {{ .number = 10 }};
  __dme(f5, int x;) = {{ .number = 10 }};
  __dme(g5, int x;) = {{ .number = 10 }};
  __dme(h5, int x;) = {{ .number = 10 }};
  __dme(i5, int x;) = {{ .number = 10 }};
  __dme(j5, int x;) = {{ .number = 10 }};
  __dme(k5, int x;) = {{ .number = 10 }};
  __dme(l5, int x;) = {{ .number = 10 }};
  __dme(m5, int x;) = {{ .number = 10 }};
  __dme(n5, int x;) = {{ .number = 10 }};
  __dme(o5, int x;) = {{ .number = 10 }};
  __dme(p5, int x;) = {{ .number = 10 }};
  __dme(q5, int x;) = {{ .number = 10 }};
  __dme(r5, int x;) = {{ .number = 10 }};
  __dme(s5, int x;) = {{ .number = 10 }};
  __dme(t5, int x;) = {{ .number = 10 }};
  __dme(u5, int x;) = {{ .number = 10 }};
  __dme(v5, int x;) = {{ .number = 10 }};
  __dme(w5, int x;) = {{ .number = 10 }};
  __dme(x5, int x;) = {{ .number = 10 }};
  __dme(y5, int x;) = {{ .number = 10 }};
  __dme(z5, int x;) = {{ .number = 10 }};
  __dme(a6, int x;) = {{ .number = 10 }};
  __dme(b6, int x;) = {{ .number = 10 }};
  __dme(c6, int x;) = {{ .number = 10 }};
  __dme(d6, int x;) = {{ .number = 10 }};
  __dme(e6, int x;) = {{ .number = 10 }};
  __dme(f6, int x;) = {{ .number = 10 }};
  __dme(g6, int x;) = {{ .number = 10 }};
  __dme(h6, int x;) = {{ .number = 10 }};
  __dme(i6, int x;) = {{ .number = 10 }};
  __dme(j6, int x;) = {{ .number = 10 }};
  __dme(k6, int x;) = {{ .number = 10 }};
  __dme(l6, int x;) = {{ .number = 10 }};
  __dme(m6, int x;) = {{ .number = 10 }};
  __dme(n6, int x;) = {{ .number = 10 }};
  __dme(o6, int x;) = {{ .number = 10 }};
  __dme(p6, int x;) = {{ .number = 10 }};
  __dme(q6, int x;) = {{ .number = 10 }};
  __dme(r6, int x;) = {{ .number = 10 }};
  __dme(s6, int x;) = {{ .number = 10 }};
  __dme(t6, int x;) = {{ .number = 10 }};
  __dme(u6, int x;) = {{ .number = 10 }};
  __dme(v6, int x;) = {{ .number = 10 }};
  __dme(w6, int x;) = {{ .number = 10 }};
  __dme(x6, int x;) = {{ .number = 10 }};
  __dme(y6, int x;) = {{ .number = 10 }};
  __dme(z6, int x;) = {{ .number = 10 }};
  __dme(a7, int x;) = {{ .number = 10 }};
  __dme(b7, int x;) = {{ .number = 10 }};
  __dme(c7, int x;) = {{ .number = 10 }};
  __dme(d7, int x;) = {{ .number = 10 }};
  __dme(e7, int x;) = {{ .number = 10 }};
  __dme(f7, int x;) = {{ .number = 10 }};
  __dme(g7, int x;) = {{ .number = 10 }};
  __dme(h7, int x;) = {{ .number = 10 }};
  __dme(i7, int x;) = {{ .number = 10 }};
  __dme(j7, int x;) = {{ .number = 10 }};
  __dme(k7, int x;) = {{ .number = 10 }};
  __dme(l7, int x;) = {{ .number = 10 }};
  __dme(m7, int x;) = {{ .number = 10 }};
  __dme(n7, int x;) = {{ .number = 10 }};
  __dme(o7, int x;) = {{ .number = 10 }};
  __dme(p7, int x;) = {{ .number = 10 }};
  __dme(q7, int x;) = {{ .number = 10 }};
  __dme(r7, int x;) = {{ .number = 10 }};
  __dme(s7, int x;) = {{ .number = 10 }};
  __dme(t7, int x;) = {{ .number = 10 }};
  __dme(u7, int x;) = {{ .number = 10 }};
  __dme(v7, int x;) = {{ .number = 10 }};
  __dme(w7, int x;) = {{ .number = 10 }};
  __dme(x7, int x;) = {{ .number = 10 }};
  __dme(y7, int x;) = {{ .number = 10 }};
  __dme(z7, int x;) = {{ .number = 10 }};
  __dme(a8, int x;) = {{ .number = 10 }};
  __dme(b8, int x;) = {{ .number = 10 }};
  __dme(c8, int x;) = {{ .number = 10 }};
  __dme(d8, int x;) = {{ .number = 10 }};
  __dme(e8, int x;) = {{ .number = 10 }};
  __dme(f8, int x;) = {{ .number = 10 }};
  __dme(g8, int x;) = {{ .number = 10 }};
  __dme(h8, int x;) = {{ .number = 10 }};
  __dme(i8, int x;) = {{ .number = 10 }};
  __dme(j8, int x;) = {{ .number = 10 }};
  __dme(k8, int x;) = {{ .number = 10 }};
  __dme(l8, int x;) = {{ .number = 10 }};
  __dme(m8, int x;) = {{ .number = 10 }};
  __dme(n8, int x;) = {{ .number = 10 }};
  __dme(o8, int x;) = {{ .number = 10 }};
  __dme(p8, int x;) = {{ .number = 10 }};
  __dme(q8, int x;) = {{ .number = 10 }};
  __dme(r8, int x;) = {{ .number = 10 }};
  __dme(s8, int x;) = {{ .number = 10 }};
  __dme(t8, int x;) = {{ .number = 10 }};
  __dme(u8, int x;) = {{ .number = 10 }};
  __dme(v8, int x;) = {{ .number = 10 }};
  __dme(w8, int x;) = {{ .number = 10 }};
  __dme(x8, int x;) = {{ .number = 10 }};
  __dme(y8, int x;) = {{ .number = 10 }};
  __dme(z8, int x;) = {{ .number = 10 }};
};

#pragma pack(pop)

int main() {
  dme2_t c;
  printf("%s %s\n", c.a_str, typeid(dme2_t::a_t).name());
  c.b.AN();
  c.GetMemberAmount();

  dme_t a;
  dme_t b;

  //
#if DME_VERIFY_PRINT == 1
  printf("%llu %llu %llu %llu %d %d", a.a.I, b.a.I, b.z8.I, a.b.I, (int)a.z8, (int)c.c);
#endif

#if VERIFY_DME == 1
  assert(a.a.I == 0);
  assert(b.a.I == 0);
  assert((int)b.z8 == 233);
  assert((int)c.c == 2 && c.c.I == 2);
  assert((void*)c.NA(2) == (void*)&c.c);
  assert(c.GetMemberAmount() == sizeof(c) / sizeof(decltype(c)::dme_type_t));
  //decltype(c.d)::dt::;

  //printf("%s\n", typeid(std::tuple_element_t<0, std::tuple<decltype(a.b)::a_t>>).name());
#endif
  
  return a.a.I + b.a.I + b.z8 + a.b + a.z8 + c.c;
}
