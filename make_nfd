# compiler settings
CC = clang

FLAGS =
CXXFLAGS = -fuse-ld=gold -I . -w $(FLAGS)



NFD_PATH =
OUTPUT_PATH = lib/fan/

ROOT_PATH = ./fan/

DEBUG_FLAGS = -g
RELEASE_FLAGS = -mmmx -msse -msse2 -msse3 -mssse3 -msse4 -msse4.1 -O3 -fdata-sections -ffunction-sections

OUT_FILE_FORMAT =

INCLUDES =
ifeq ($(OS),Windows_NT)
	NFD_PATH += $(ROOT_PATH)nativefiledialog/
	OUT_FILE_FORMAT+=lib
else
	INCLUDES += $(shell pkg-config --cflags gtk+-3.0)
	NFD_PATH += $(ROOT_PATH)nativefiledialog/
	OUT_FILE_FORMAT+=a
endif

CXXFLAGS += -I $(ROOT_PATH)../

#NOTE
CXXFLAGS += $(RELEASE_FLAGS)

%.o: %.cpp
	$(CPP) $(CXXFLAGS) $(INCLUDES) -std=c++2a -c $< -o $@

%.o: %.c
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

NFD_SRC := $(filter-out $(NFD_PATH)/nfd_zenity.c, $(wildcard $(NFD_PATH)/*.cpp) $(wildcard $(NFD_PATH)/*.c))

ifeq ($(OS),Windows_NT)
	NFD_SRC := $(filter-out $(NFD_PATH)/nfd_gtk.c, $(NFD_SRC))
else
	NFD_SRC := $(filter-out $(NFD_PATH)/nfd_win.cpp, $(NFD_SRC))
endif

NFD_OBJ := $(NFD_SRC:.cpp=.o)
NFD_OBJ := $(NFD_OBJ:.c=.o)
NFD_LIB = libnfd.$(OUT_FILE_FORMAT)

$(NFD_LIB): $(NFD_OBJ)
	llvm-ar rcs $(OUTPUT_PATH)$@ $^

